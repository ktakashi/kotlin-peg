name: Java CI with Gradle

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.7.0
      with:
        arguments: build
  publish:
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Install GPG secret key
        id: install-secret-key
        run: |
          gpg --version
          cat <(echo -e "${{ secrets.GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format=long
          gpg --list-keys --keyid-format=long
      - name: Compute keyId
        id: compute-key-id
        run: |
          keyId=`gpg --list-keys --keyid-format short --with-colons | awk -F: '/^pub/ {print substr($5, 9, 16)}'`
          echo $keyId
          echo "GPG_KEY_ID=$keyId" >> "$GITHUB_OUTPUT"
      - name: Publish with Gradle
        uses: gradle/gradle-build-action@v2.7.0
        with:
          arguments: |
            publish
            -Psigning.keyId="${{ steps.compute-key-id.outputs.GPG_KEY_ID }}"
            -Psigning.password="${{ secrets.GPG_PASS_PHRASE }}"
            -Psigning.key="${{ secrets.GPG_SECRET_KEY }}"
            -PossrhUsername="${{ secrets.OSSRHUSERNAME }}"
            -PossrhPassword="${{ secrets.OSSRHPASSWORD }}"
